"""add updated_at to bookmark

Revision ID: d65efbda2994
Revises: 4a9082ac593c
Create Date: 2025-10-01 23:23:01.970308

"""
from typing import Sequence, Union
from datetime import datetime
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'd65efbda2994'
down_revision: Union[str, Sequence[str], None] = '4a9082ac593c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    
    op.execute("UPDATE bookmark SET updated_at = created_at")
    
    with op.batch_alter_table("bookmark") as batch_op:
        batch_op.alter_column("updated_at",
                              existing_type=sa.DateTime(),
                              server_default=sa.func.now(),
                              nullable=True
                              )
    
    
    with op.batch_alter_table("bookmark") as batch_op:
        batch_op.alter_column("created_at",
                              existing_type=sa.DATE(),
                              type_=sa.DateTime()
                              
                              )
    
    # op.alter_column('user', 'is_active',
    #            existing_type=sa.BOOLEAN(),
    #            nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # op.alter_column('user', 'is_active',
    #            existing_type=sa.BOOLEAN(),
    #            nullable=True)
    op.drop_column('bookmark', 'updated_at')
    
    op.alter_column("bookmark", "created_at", existing_type=sa.DateTime(), type_=sa.DATE())
    # ### end Alembic commands ###
